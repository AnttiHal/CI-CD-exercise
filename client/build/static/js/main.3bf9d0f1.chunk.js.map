{"version":3,"sources":["components/Person.js","components/Persons.js","components/PersonForm.js","services/persons.js","App.js","index.js"],"names":["Person","person","delOnePerson","name","number","onClick","Persons","persons","delPerson","map","PersonForm","props","onSubmit","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","baseUrl","axios","get","then","response","data","newObject","post","id","delete","App","useState","setPersons","setNewName","setNewNumber","notificationMessage","setNotificationMessage","notificationType","setNotificationType","useEffect","console","log","personService","initialPersons","Notification","message","className","event","target","preventDefault","nameObject","includes","setTimeout","returnedPerson","concat","catch","error","JSON","stringify","window","confirm","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3bf9d0f1.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Person = ({person, delOnePerson}) => {\n    return (\n        <p>{person.name} {person.number} <button onClick={delOnePerson}>delete</button></p>\n    )\n}\n\nexport default Person","import React from \"react\";\nimport Person from \"./Person\";\n\n\nconst Persons = ({persons, delPerson}) => {\n    return (\n        <div>{persons.map(person => <Person key={person.name} person={person} delOnePerson={() => delPerson(person)}/>)}</div>\n    )\n}\n\nexport default Persons","import React from \"react\";\n\n\nconst PersonForm = (props) => {\n\n    return (\n        <form onSubmit={props.onSubmit}>\n        <div>\n          name: <input value={props.newName}\n          onChange={props.handleNameChange}/>\n        </div>\n        <div>\n          number: <input value={props.newNumber}\n          onChange={props.handleNumberChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    )\n}\n\nexport default PersonForm","import axios from \"axios\";\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst del = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n  return request\n}\n\nexport default { getAll, create, update, del}","import React, { useState, useEffect } from 'react'\n\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\n\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ notificationMessage, setNotificationMessage] = useState(null)\n  const [ notificationType, setNotificationType] = useState('confirm')\n\n\n\n  useEffect(() => {\n    console.log('effect')\n    personService\n    .getAll()\n    .then(initialPersons => {\n      setPersons(initialPersons)\n    })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName, \n      number: newNumber\n    }\n    console.log('nameObject.name: ' +nameObject.name)\n    if (persons.map(person => person.name).includes(nameObject.name)) {\n      setNotificationType('error')\n      setNotificationMessage(`nimi ${nameObject.name} on jo käytössä!`)\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n      \n    } else {\n      personService\n        .create(nameObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNotificationType('confirm')\n          setNotificationMessage(`kohde ${nameObject.name} lisätty onnistuneesti.`)\n        \n        }).catch(error => {\n          setNotificationType('error')\n          console.log(error.response.data)\n          setNotificationMessage(JSON.stringify(error.response.data))         \n        })        \n    }   \n    setNewName('')\n          setNewNumber('')   \n  }\n\n  const delPerson = (person) => {\n    const id = person.id\n    if (window.confirm(`haluatko varmasti poistaa kohteen ${person.name}?`)) {\n      personService\n      .del(id)\n      .then(setPersons(persons.filter(person => person.id !== id)))\n      .catch(error => {\n        setNotificationType('error')\n        setNotificationMessage(`kohde ${person.name} on jo poistettu palvelimelta.`)\n      })\n      setNotificationType('confirm')\n      setNotificationMessage(`kohde ${person.name} poistettu onnistuneesti.`)\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n    }\n    \n\n\n\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n    \n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n    \n  }\n\n  const Notification = ({message, type }) => {\n    if (message === null) {\n      return null\n    }\n    return (\n      <div className={type}>\n        {message}\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} type={notificationType}/>\n      <PersonForm \n      newName={newName} \n      newNumber={newNumber}\n      handleNameChange={handleNameChange} \n      handleNumberChange={handleNumberChange}\n      onSubmit={addPerson}/>      \n      <h2>Numbers</h2>            \n      <Persons persons={persons} delPerson={delPerson}/>             \n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}